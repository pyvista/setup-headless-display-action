name: "setup-headless-display-action"
description: "Setup a headless display on Linux and Windows"
author: PyVista Developers'
inputs:
  pyvista:
    description: "Set PyVista env vars for headless mode"
    required: false
    default: "true"
  qt:
    description: "Install libraries required for Qt on Linux"
    required: false
    default: "false"
  wm:
    description: "Install window manager on Linux"
    required: false
    default: "herbstluftwm"
  mesa3d-release:
    description: |
      Mesa3D release to install (by default, the latest release is installed).
      This is only used on Windows.
    required: false
    default: "24.3.0"
branding:
  icon: "monitor"
  color: "blue"
runs:
  using: "composite"
  steps:
    - name: Update apt
      if: runner.os == 'Linux'
      shell: bash
      # TODO: Pyvista uses `xset` which is part of x11-xserver-utils, maybe a better way to check?
      run: sudo apt update

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get install -y \
          libglx-mesa0 \
          libgl1 \
          xvfb \
          x11-xserver-utils

    - name: Install Linux Window manager
      shell: bash
      if: runner.os == 'Linux' && inputs.wm == 'herbstluftwm'
      run: sudo apt-get install -y herbstluftwm

    - name: Install Linux Qt dependencies
      if: runner.os == 'Linux' && inputs.qt != 'false'
      shell: bash
      run: |
        sudo apt-get install -y \
          libdbus-1-3 \
          libegl1 \
          libopengl0 \
          libosmesa6 \
          libxcb-cursor0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-shape0 \
          libxcb-xfixes0 \
          libxcb-xinerama0 \
          libxcb-xinput0 \
          libxkbcommon-x11-0 \
          mesa-utils \
          x11-utils

    - name: Determine OpenGL version to install on Windows
      if: runner.os == 'Windows'
      shell: bash
      run: |
        if [ "${{ inputs.mesa3d-release }}" == "latest" ]; then
          echo "Fetching latest Mesa3D release version..."
          export MESA3D_VERSION=$(curl -s https://api.github.com/repos/pal1000/mesa-dist-win/releases/latest | grep -o '"tag_name": ".*"' | sed 's/"tag_name": "\(.*\)"/\1/')
        else
          echo "Using specified Mesa3D release version..."
          export MESA3D_VERSION=${{ inputs.mesa3d-release }}
        fi
        echo "MESA3D_VERSION=${MESA3D_VERSION}" | tee -a $GITHUB_ENV

    - name: Install OpenGL on Windows
      if: runner.os == 'Windows'
      shell: cmd
      run: bash ${{ github.action_path }}\windows\install_opengl.sh

    - name: Configure headless display on Linux
      if: runner.os == 'Linux'
      shell: bash
      run: |
        export DISPLAY=:99.0
        echo "DISPLAY=:99.0" >> $GITHUB_ENV
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3

    - name: Start window manager on Linux
      if: runner.os == 'Linux' && inputs.wm == 'herbstluftwm'
      shell: bash
      run: |
        herbstluftwm &
        sleep 3

    - name: Configure for PyVista
      if: inputs.pyvista != 'false'
      shell: bash
      run: echo "PYVISTA_OFF_SCREEN=true" >> $GITHUB_ENV
